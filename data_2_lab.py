# -*- coding: utf-8 -*-
"""data 2 Lab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16z3NynSzYBbfyvVaVezlbFDnCVwlGA1K
"""

import pandas as pd # Import pandas library

# Assuming your data is in a CSV file named 'your_data.csv'
data = pd.read_csv('/content/Groceries_dataset.csv') # Load your data into a DataFrame called 'data'

# Now you can drop duplicates
data.drop_duplicates(inplace=True)

# drop duplicate
data.drop_duplicates(inplace=True)

# Convert 'Date' data type
data['Date'] = pd.to_datetime(data['Date'], format='%d-%m-%Y')

# Add 'year', 'month', and 'day' columns
data['year'] = data['Date'].dt.year
data['month'] = data['Date'].dt.month
data['day'] = data['Date'].dt.day
data['day_name'] = data['Date'].dt.day_name()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt # Import the matplotlib library and assign it the alias 'plt'


plt.figure(figsize=(12,6))

sns.barplot(x = data['itemDescription'].value_counts()[:10].index,
           y = data['itemDescription'].value_counts()[:10].values)
plt.xticks(size=12, rotation=45)
plt.title('10 Best Selling Items')
plt.show()

# Number of transactions each month
plt.figure(figsize=(12,6))

sns.barplot(x = data['month'].value_counts().index,
           y = data['month'].value_counts().values)
plt.xticks(size=12)
plt.title('Number of Transactions Each Month')
plt.show()

# Number of transactions each day
plt.figure(figsize=(12,6))

sns.barplot(x = data['day_name'].value_counts().index,
           y = data['day_name'].value_counts().values)
plt.xticks(size=12)
plt.title('Number of Transactions Each Day')
plt.show()

item_count = data.groupby(['Member_number', 'Date', 'itemDescription'])['itemDescription'].count().reset_index(name='Count')
item_count.head(10)

item_count['Transaction'] = item_count.groupby(['Member_number', 'Date'])['Date'].ngroup()+1

item_count_pivot = item_count.pivot_table(index='Transaction', columns='itemDescription', values='Count', aggfunc='sum').fillna(0)

# drop comma
item_count_pivot = item_count_pivot.astype('int32')

from mlxtend.frequent_patterns import association_rules, apriori
basket = item_count.groupby('Transaction')['itemDescription'].apply(list).reset_index()
basket_encoded = basket['itemDescription'].str.join('|').str.get_dummies('|')

frequent_itemsets = apriori(basket_encoded, min_support=0.01, use_colnames=True)
frequent_itemsets.sort_values('support', ascending=False).head(10)

rules = association_rules(frequent_itemsets, metric='lift', min_threshold=0.5)
rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']].sort_values('confidence', ascending=False).head(10)